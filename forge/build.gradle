import org.gradle.api.tasks.bundling.Jar
import org.gradle.api.tasks.compile.JavaCompile
import xyz.wagyourtail.unimined.expect.task.ExpectPlatformJar
plugins {
    id "net.neoforged.moddev.legacyforge"
    id 'xyz.wagyourtail.unimined.expect-platform' version '1.0.5'
}

archivesBaseName = "${project.archive_base_name}-forge"

neoForge {
    version = "${project.minecraft_version}-${project.forge_version}"
    def at = project(':antimatter-common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = project.minecraft_version
        mappingsVersion = project.mappings_version
    }
    runs {
        client {
            client()

        }
        data {
            data()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

mixin {
    config "antimatter.mixins.json"
    config "antimatter-forge.mixins.json"
    config "antimatter.rei.mixins.json"
    config "tesseract-forge.mixins.json"
}

dependencies {
    implementation(expectPlatform.annotationsDep)
    //subprojects
    implementation(project(":tesseract-forge"))
    compileOnly(project(":tesseract-common"))
    implementation(project(":antimatter-forge"))
    compileOnly(project(":antimatter-common"))
    compileOnly(project(":common"))

    //antimatter deps
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation("org.jetbrains:annotations:26.0.1")
    //modCompileOnly("mezz.jei:jei-${rootProject.minecraft_version}-forge:${rootProject.jei_version}")
    //modRuntimeOnly("mezz.jei:jei-${rootProject.minecraft_version}-forge:${rootProject.jei_version}")
    modImplementation("mezz.jei:jei-1.18.2:9.7.2.1001")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-forge:${project.rei_version}")
    modCompileOnly("me.shedaniel.cloth:cloth-config-forge:6.5.133")
    modImplementation("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${project.crafttweaker_version}")
    modImplementation("dev.trinsdar:arrp-forge:0.6.7")
    modImplementation("dev.trinsdar:terraform-utils-v1:3.1.5")
    modImplementation("earth.terrarium:botarium-forge-1.18.2:${project.botarium_version}")
    modImplementation("org.gt-reimagined:structurelib-forge:${project.structurelib_version}-${project.minecraft_version}")
    modImplementation("com.teamresourceful.resourcefullib:resourcefullib-forge-1.18.2:${project.resourcefullib_version}")
    modImplementation("maven.modrinth:carbon-config:${project.carbon_config_forge_version}")
    modImplementation("dev.latvian.mods:kubejs-forge:${project.kubejs_version}")
    modImplementation("dev.latvian.mods:rhino-forge:${project.rhino_version}")
    modImplementation("dev.architectury:architectury-forge:${project.architectury_version}")
    modRuntimeOnly("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${rootProject.crafttweaker_version}")
    modImplementation("curse.maven:the-one-probe-245211:${project.top_forge_file}")
    implementation("io.github.llamalad7:mixinextras-forge:0.4.1")
    //MIXIN
    if (System.getProperty('idea.sync.active') != 'true') {
        annotationProcessor 'org.spongepowered:mixin:0.8.5-SNAPSHOT:processor'
    }

    //gt5r deps
    //minecraftRuntimeLibraries(group: 'com.github.Speiger', name: 'Primitive-Collections', version: '[0.8,0.9)')
    modImplementation("org.gt-reimagined:gtcore-forge:${rootProject.gt_core_version}-${rootProject.minecraft_version}")
    jarJar("org.gt-reimagined:gtcore-forge:${rootProject.gt_core_version}-${rootProject.minecraft_version}")
    modRuntimeOnly("dev.trinsdar:terraform-wood-api-v1:3.1.5")
    jarJar("dev.trinsdar:terraform-wood-api-v1:3.1.5")
    //modRuntimeOnly("curse.maven:rubidium-574856:4451888")
    modRuntimeOnly("curse.maven:worldstripper-250603:3670854")
    modRuntimeOnly("curse.maven:ae2-223794:4498141")
    modImplementation("curse.maven:ctm-267602:3933537")
    modCompileOnly("curse.maven:terrafirmacraft-302973:4723717")
    //modRuntimeOnly("curse.maven:terrafirmacraft-302973:4723717")
    modRuntimeOnly("curse.maven:patchouli-306770:3846086")
    modRuntimeOnly("curse.maven:the-twilight-forest-227639:4337390")
    modRuntimeOnly("curse.maven:beyond-earth-377448:3807783")
    modRuntimeOnly("curse.maven:farmers-delight-398521:4679315")
    modRuntimeOnly("curse.maven:sophisticated-backpacks-422301:4882591")
    modRuntimeOnly("curse.maven:openblocks-elevator-250832:3670034")
    modRuntimeOnly("curse.maven:sophisticated-core-618298:4913626")
    modRuntimeOnly("curse.maven:jade-324717:5079263")
    //modRuntimeOnly("curse.maven:tfcm-819850:4449385")
}

jar {
    zip64 true

}

tasks.named('compileJava', JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
    exclude('gtuassets1.14')
    exclude('assets/gt4r/textures/old_textures')

    inputs.property "version", project.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.mod_version
    }
}

sourcesJar {
    from(project(':common').sourceSets.main.allSource)
}

tasks.create("platformJar", ExpectPlatformJar){
    platformName = "forge"
    from(jarJar)
    inputFiles = sourceSets.main.output
    archiveClassifier.set "dev"
    remap = ["xyz/wagyourtail/unimined/expect/annotation/Environment": "net/minecraftforge/api/distmarker/OnlyIn",
             "xyz/wagyourtail/unimined/expect/annotation/Environment\$EnvType": "net/minecraftforge/api/distmarker/Dist",
             "xyz/wagyourtail/unimined/expect/annotation/Environment\$EnvType.SERVER": "DEDICATED_SERVER"]
}

tasks.named('reobfJar', Jar).configure {
    input.set(platformJar.archiveFile)
    dependsOn platformJar
}
